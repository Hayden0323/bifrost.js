{
  "types": {
    "TokenSymbol": {
      "_enum": {
        "BNC": 0,
        "aUSD": 1,
        "DOT": 2,
        "vDOT": 3,
        "KSM": 4,
        "vKSM": 5,
        "ETH": 6,
        "vETH": 7,
        "EOS": 8,
        "vEOS": 9,
        "IOST": 10,
        "vIOST": 11
      }
    },
    "CurrencyId": {
      "_enum": {
        "Token": "TokenSymbol"
      }
    },
    "AmountOf": "i128",
    "ChainId": {
      "_enum": {
        "RelayChain": "Null",
        "ParaChain": "ParaId"
      }
    },
    "XCurrencyId": {
      "chainId": "ChainId",
      "currencyId": "Vec<u8>"
    },
    "CurrencyIdOf": "CurrencyId",
    "IsExtended": "bool",
    "StorageVersion": "Releases",
    "ShareWeight": "Balance",
    "PalletBalanceOf": "Balance",
    "BlockNumberFor": "BlockNumber",
    "NumberOrHex": {
      "_enum": {
        "Number": "u64",
        "Hex": "U256"
      }
    },
    "TokenBalance": "Balance",
    "PairId": "u32",
    "AssetId": {
      "_enum": {
        "NativeCurrency": null,
        "ParaCurrency": "u32"
      }
    },
    "Pair": {
      "token_0": "AssetId",
      "token_1": "AssetId",
      "account": "AccountId",
      "total_liquidity": "TokenBalance"
    },
    "PairInfo": {
      "token_0": "AssetId",
      "token_1": "AssetId",
      "account": "AccountId",
      "total_liquidity": "TokenBalance",
      "holding_liquidity": "TokenBalance",
      "reserve_0": "TokenBalance",
      "reserve_1": "TokenBalance"
    }
  },
  "typesBundle": {
    "spec": {
      "bifrost": {
        "types": [
          {
            "minmax": [
              0,
              null
            ],
            "types": {
              "AccountInfo": "AccountInfoWithRefCount",
              "Address": "MultiAddress",
              "LookupSource": "MultiAddress"
            }
          }
        ]
      }
    }
  },
  "rpc": {
    "chargeTransactionFee": {
      "getFeeTokenAndAmount": {
        "description": "Get charging token type and amount in terms of flexible transaction fee.",
        "params": [
          {
            "name": "who",
            "type": "AccountId"
          },
          {
            "name": "extrinsic",
            "type": "Bytes"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "(CurrencyId, NumberOrHex)",
        "isSubscription": false,
        "jsonrpc": "chargeTransactionFee_getFeeTokenAndAmount",
        "method": "getFeeTokenAndAmount",
        "section": "chargeTransactionFee"
      }
    },
    "zenlinkProtocol": {
      "getSovereignsInfo": {
        "description": "Get the ownership of a certain currency for each parachain.",
        "params": [
          {
            "name": "assetId",
            "type": "AssetId"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "(u32, AccountId, NumberOrHex)",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getSovereignsInfo",
        "method": "getSovereignsInfo",
        "section": "zenlinkProtocol"
      },
      "getAllPairs": {
        "description": "Get the information of all the exchange pairs.",
        "params": [
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "Vec<PairInfo<AccountId, NumberOrHex>>",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getAllPairs",
        "method": "getAllPairs",
        "section": "zenlinkProtocol"
      },
      "getOwnerPairs": {
        "description": "Get ownership of all exchange pairs for a particular account.",
        "params": [
          {
            "name": "owner",
            "type": "AccountId"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "Vec<PairInfo<AccountId, NumberOrHex>>",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getOwnerPairs",
        "method": "getOwnerPairs",
        "section": "zenlinkProtocol"
      },
      "getPairByAssetId": {
        "description": "Get the detailed information of a particular exchange pair.",
        "params": [
          {
            "name": "token0",
            "type": "AssetId"
          },
          {
            "name": "token1",
            "type": "AssetId"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "Option<PairInfo<AccountId, NumberOrHex>>",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getPairByAssetId",
        "method": "getPairByAssetId",
        "section": "zenlinkProtocol"
      },
      "getAmountInPrice": {
        "description": "Get the output token amount for an exact input token amount.",
        "params": [
          {
            "name": "supply",
            "type": "TokenBalance"
          },
          {
            "name": "path",
            "type": "Vec<AssetId>"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "NumberOrHex",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getAmountInPrice",
        "method": "getAmountInPrice",
        "section": "zenlinkProtocol"
      },
      "getAmountOutPrice": {
        "description": "Get the input token amount for an exact output token amount.",
        "params": [
          {
            "name": "supply",
            "type": "TokenBalance"
          },
          {
            "name": "path",
            "type": "Vec<AssetId>"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "NumberOrHex",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getAmountOutPrice",
        "method": "getAmountOutPrice",
        "section": "zenlinkProtocol"
      },
      "getEstimateLptoken": {
        "description": "Get the estimated number of LP token acquired given the desired and minimum amount for both in-token and out-token.",
        "params": [
          {
            "name": "token0",
            "type": "AssetId"
          },
          {
            "name": "token1",
            "type": "AssetId"
          },
          {
            "name": "amount0Desired",
            "type": "TokenBalance"
          },
          {
            "name": "amount1Desired",
            "type": "TokenBalance"
          },
          {
            "name": "amount0Min",
            "type": "TokenBalance"
          },
          {
            "name": "amount1Min",
            "type": "TokenBalance"
          },
          {
            "name": "at",
            "type": "BlockHash",
            "isHistoric": true,
            "isOptional": true
          }
        ],
        "type": "NumberOrHex",
        "isSubscription": false,
        "jsonrpc": "zenlinkProtocol_getEstimateLptoken",
        "method": "getEstimateLptoken",
        "section": "zenlinkProtocol"
      }
    }
  }
}